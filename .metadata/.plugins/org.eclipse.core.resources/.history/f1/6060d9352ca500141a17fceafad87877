package com.example.efproject;

import java.io.File;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ImageView;

public class MainActivity extends Activity {

	static final int REQUEST_IMAGE_CAPTURE = 1;
	static final int REQUEST_IMAGE_EDIT = 2;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	public void ClickTakePhotoButton(View v)
	{
		Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
		if(intent.resolveActivity(getPackageManager()) != null)
		{
			startActivityForResult(intent, REQUEST_IMAGE_CAPTURE);
		}
	}
	public void ClickEditPhotoButton(View v)
	{
		ImageView imageView = (ImageView) findViewById(R.id.imageView1);
		Intent intent = new Intent(this,EditPhoto.class);
		intent.putExtra("Photo", ((BitmapDrawable) imageView.getDrawable()).getBitmap());
		startActivityForResult(intent, REQUEST_IMAGE_EDIT);
	}
	public void ClickSavePhotoButton(View v)
	{
		
	}
	
	/* Checks if external storage is available for read and write */
	public boolean isExternalStorageWritable() {
	    String state = Environment.getExternalStorageState();
	    if (Environment.MEDIA_MOUNTED.equals(state)) {
	        return true;
	    }
	    return false;
	}

	/* Checks if external storage is available to at least read */
	public boolean isExternalStorageReadable() {
	    String state = Environment.getExternalStorageState();
	    if (Environment.MEDIA_MOUNTED.equals(state) ||
	        Environment.MEDIA_MOUNTED_READ_ONLY.equals(state)) {
	        return true;
	    }
	    return false;
	}
	
	public File getAlbumStorageDir(String albumName) {
	    // Get the directory for the user's public pictures directory. 
	    File file = new File(Environment.getExternalStoragePublicDirectory(
	            Environment.DIRECTORY_PICTURES), albumName);
	    if (!file.mkdirs()) {
	        //Log.e(LOG_TAG, "Directory not created");
	    }
	    return file;
	}
	
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		// TODO Auto-generated method stub
		super.onActivityResult(requestCode, resultCode, data);
		if(requestCode==REQUEST_IMAGE_CAPTURE && resultCode==RESULT_OK)
		{
			Bundle extras = data.getExtras();
			Bitmap imageBitmap = (Bitmap) extras.get("data");
			ImageView imageView = (ImageView) findViewById(R.id.imageView1);
			imageView.getLayoutParams().width = imageBitmap.getWidth();
			imageView.getLayoutParams().height = imageBitmap.getHeight();
			imageView.setImageBitmap(imageBitmap);
		}
		else if(requestCode==REQUEST_IMAGE_EDIT && resultCode==RESULT_OK)
		{
			Bundle extras = data.getExtras();
			Bitmap imageBitmap = (Bitmap) extras.get("drawing");
			ImageView imageView = (ImageView) findViewById(R.id.imageView1);
			imageView.getLayoutParams().width = imageBitmap.getWidth();
			imageView.getLayoutParams().height = imageBitmap.getHeight();
			imageView.setImageBitmap(imageBitmap);
		}
	}
}
