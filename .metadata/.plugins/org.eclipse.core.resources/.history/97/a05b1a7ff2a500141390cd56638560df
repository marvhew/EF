package com.example.efproject;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Matrix;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.text.style.ImageSpan;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.Spinner;

public class EditPhoto extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_edit_photo);
		Bitmap bitmap = (Bitmap) getIntent().getExtras().get("Photo");
		int height = bitmap.getHeight();
		int width = bitmap.getWidth();
		DrawingView drawingView = (DrawingView) findViewById(R.id.Drawing1);
		drawingView.getLayoutParams().width = width;
		drawingView.getLayoutParams().height = height;
		drawingView.setImageBitmap(bitmap);
		String[] arraySpinner = new String[] { "Red", "Blue", "Green" };
		Spinner spinner = (Spinner) findViewById(R.id.Spn_Colors);
		ArrayAdapter adapter = new ArrayAdapter(this,
				android.R.layout.simple_spinner_item, arraySpinner);
		spinner.setAdapter(adapter);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.edit_photo, menu);
		return true;
	}

	private void SaveChanges() {
		DrawingView drawingView = (DrawingView) findViewById(R.id.Drawing1);
		drawingView.setDrawingCacheEnabled(true);
		Bitmap bmp2 = drawingView.getDrawingCache().copy(Bitmap.Config.ARGB_8888, false);
		Bitmap bmp1 = ((BitmapDrawable)drawingView.getDrawable()).getBitmap().copy(Bitmap.Config.ARGB_8888, true);
		drawingView.setDrawingCacheEnabled(false);
		
		drawingView.setImageBitmap(combineImages(bmp1,bmp2));
	}
	
	public Bitmap combineImages(Bitmap c, Bitmap s) { // can add a 3rd parameter 'String loc' if you want to save the new image - left some code to do that at the bottom 
	    Bitmap cs = null; 
	 
	    int width, height = 0; 
	     
	    if(c.getWidth() > s.getWidth()) { 
	      width = c.getWidth(); 
	      height = c.getHeight(); 
	    } else { 
	      width = s.getWidth(); 
	      height = c.getHeight(); 
	    } 
	 
	    cs = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888); 
	 
	    Canvas comboImage = new Canvas(cs); 
	 
	    comboImage.drawBitmap(c, 0f, 0f, null); 
	    comboImage.drawBitmap(s, 0f, 0f, null); 
	 
	    // this is an extra bit I added, just incase you want to save the new image somewhere and then return the location 
	    /*String tmpImg = String.valueOf(System.currentTimeMillis()) + ".png"; 
	 
	    OutputStream os = null; 
	    try { 
	      os = new FileOutputStream(loc + tmpImg); 
	      cs.compress(CompressFormat.PNG, 100, os); 
	    } catch(IOException e) { 
	      Log.e("combineImages", "problem combining images", e); 
	    }*/ 
	 
	    return cs; 
	  } 

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	public void Click_Cancel(View v) {
		setResult(RESULT_CANCELED);
		finish();
	}

	public void Click_OK(View v) {
		SaveChanges();
		Intent intent = new Intent();
		intent.putExtra("drawing",
				((BitmapDrawable) ((DrawingView) findViewById(R.id.Drawing1))
						.getDrawable()).getBitmap());
		setResult(RESULT_OK, intent);
		finish();
	}

	public void Click_Apply(View v) {
		SaveChanges();
		float stroke = 0;
		EditText edit = (EditText) findViewById(R.id.Edt_Stroke);
		if (!edit.getText().toString().isEmpty())
			stroke = Float.parseFloat(edit.getText().toString());

		DrawingView drawingView = (DrawingView) findViewById(R.id.Drawing1);
		drawingView.destroyDrawingCache();
		Spinner spinner = (Spinner) findViewById(R.id.Spn_Colors);
		String color = (String) spinner.getSelectedItem();
		if (color == "Red") {
			drawingView.SetPaintColor(Color.RED);
		} else if (color == "Blue") {
			drawingView.SetPaintColor(Color.BLUE);
		} else if (color == "Green") {
			drawingView.SetPaintColor(Color.GREEN);
		}

		drawingView.SetStrokeWidth(stroke);
	}
}
